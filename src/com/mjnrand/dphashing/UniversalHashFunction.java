/*
 * UniversalHashFunction.java
 * 
 * Created on Dec 15, 2003
 */
package com.mjnrand.dphashing;

/**
 * UniversalHashFunction is the class that represents a universal family of hash functions.  
 * A set H is a universal family of hash functions if: 
 * 
 *  For each x, y in U, x != y, Pr[h(x) = h(y)] <= 1/M
 * 
 *    where h is in H and h:U -> {0, ..., M-1}
 * 
 * The Universal Hash Function used in this class is:
 * 
 *  h(x) = ((ax + b) mod p) mod M
 * 
 * where:
 *    
 *    p is a prime number >= U
 *    (p-1) >= a >= 1
 *    (p-1) >= b >= 0
 *
 * A hash function within this family is generated by randomly selecting a and b.
 *  
 * @author mark
 */
public class UniversalHashFunction {
  /**
   * Constructor.  Made private since we do not want this class instantiated.  It is simply
   * used for generating hash functions.
   */
  private UniversalHashFunction() {
  }
  
  /**
   * Generates a random hash function, h, that exists within this universal family of 
   * hash functions.
   * 
   * @param m size of the table that this hash function sends elements to
   * @return  random hash function from this universal family of hash functions
   */
  public static HashFunction generateHashFunction(int m) {
    int a = (int) (Math.random() * (DPHashImpl.P - 1));
    int b = (int) (Math.random() * (DPHashImpl.P - 1));
    
    if (a == 0) {
      ++a;
    }
        
    return new HashFunction(a,  b, m);
  }
}
